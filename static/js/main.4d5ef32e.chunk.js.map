{"version":3,"sources":["Sidebar.js","Navbar.js","App.js","index.js"],"names":["Sidebar","_this","this","react_default","a","createElement","id","lib","debounceTimeout","placeholder","onChange","e","props","filterVenues","target","value","query","aria-label","tabIndex","filteredVenues","map","filtered","index","aria-posinset","aria-setsize","length","key","venue","onClick","clickList","onKeyPress","listKeyPress","name","categories","Component","Navbar","role","toggleSidebar","toggleVal","navKeyPress","title","App","state","venues","markers","setState","window","document","getElementById","style","left","visibility","event","keyCode","which","loadMap","initMap","getElementsByTagName","script","src","async","defer","parentNode","insertBefore","trim","filter","toLowerCase","includes","console","log","forEach","marker","setVisible","getNearbyVenues","fetch","then","response","json","groups","items","catch","error","bounds","google","maps","LatLngBounds","infoWindow","InfoWindow","Map","center","lat","lng","zoom","Marker","position","location","animation","Animation","DROP","addListener","setAnimation","BOUNCE","setTimeout","streetViewService","StreetViewService","getPanoramaByLocation","data","status","StreetViewStatus","OK","nearStreetViewLocation","latLng","heading","geometry","spherical","computeHeading","setContent","formattedAddress","join","panoramaOptions","pov","pitch","StreetViewPanorama","setZoom","setCenter","open","populateInfowindow","extend","fitBounds","addDomListener","trigger","src_Navbar","src_Sidebar","ReactDOM","render","src_App_0","navigator","serviceWorker","register"],"mappings":"oQAsBeA,mLAlBF,IAAAC,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,SAAOC,GAAG,WAENH,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAACE,EAAA,cAAD,CAAeC,gBAAiB,IAAKC,YAAY,kBAAkBC,SAAU,SAACC,GAAOV,EAAKW,MAAMC,aAAaF,EAAEG,OAAOC,QAASA,MAAOb,KAAKU,MAAMI,SAChKb,EAAAC,EAAAC,cAAA,MAAIY,aAAW,sBAAsBC,SAAS,IAAIZ,GAAG,aAChDJ,KAAKU,MAAMO,eAAeC,IAAI,SAACC,EAAUC,GACtC,OAAQnB,EAAAC,EAAAC,cAAA,MAAIa,SAAS,IAAIK,gBAAeD,EAAM,EAAGE,eAAcvB,EAAKW,MAAMO,eAAeM,OAAQC,IAAKL,EAASM,MAAMrB,GAAIsB,QAAS,kBAAM3B,EAAKW,MAAMiB,UAAUR,IAAWS,WAAY,SAACnB,GAAOV,EAAKW,MAAMmB,aAAapB,EAAGU,KAC3MlB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,cAASgB,EAASM,MAAMK,OAC5B7B,EAAAC,EAAAC,cAAA,YAAOgB,EAASM,MAAMM,WAAW,GAAGD,kBAVlDE,aCYPC,mLAZF,IAAAlC,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACJH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,OAAKa,SAAS,IAAIkB,KAAK,SAAS9B,GAAG,aAAasB,QAAS,WAAO3B,EAAKW,MAAMyB,cAAcpC,EAAKW,MAAM0B,YAAaR,WAAY,SAACnB,GAAOV,EAAKW,MAAM2B,YAAY5B,EAAGV,EAAKW,MAAM0B,aACrKpC,KAAKU,MAAM0B,UAAYnC,EAAAC,EAAAC,cAAA,QAAM+B,KAAK,SAASnB,aAAW,OAAOuB,MAAM,uBAA5C,UAAmFrC,EAAAC,EAAAC,cAAA,QAAM+B,KAAK,SAASnB,aAAW,QAAQuB,MAAM,wBAA7C,mBAN1GN,aCkLNO,oNA5KbC,MAAQ,CACNC,OAAQ,GACRC,QAAS,GACTzB,eAAgB,GAChBH,MAAO,GACPsB,WAAW,KASbD,cAAgB,SAACtB,GACfd,EAAK4C,SAAS,CACZP,WAAYvB,IAEXd,EAAKyC,MAAMJ,WACZQ,OAAOC,SAASC,eAAe,WAAWC,MAAMC,KAAO,MACvDJ,OAAOC,SAASC,eAAe,WAAWC,MAAME,WAAa,YAG7DL,OAAOC,SAASC,eAAe,WAAWC,MAAMC,KAAO,SACvDJ,OAAOC,SAASC,eAAe,WAAWC,MAAME,WAAa,aAKjEZ,YAAc,SAACa,EAAOrC,GAER,MADDqC,EAAMC,SAAWD,EAAME,QAEhCrD,EAAKoC,cAActB,MAKvBgB,aAAe,SAACqB,EAAOzB,GAET,MADDyB,EAAMC,SAAWD,EAAME,QAEhCrD,EAAK4B,UAAUF,MAKnB4B,QAAU,WACRT,OAAOU,QAAUvD,EAAKuD,QACtB,IAAIlC,EAAQwB,OAAOC,SAASU,qBAAqB,UAAU,GACvDC,EAASZ,OAAOC,SAAS1C,cAAc,UAC3CqD,EAAOC,IAAM,0HACbD,EAAOE,OAAQ,EACfF,EAAOG,OAAQ,EACfvC,EAAMwC,WAAWC,aAAaL,EAAQpC,MAKxCT,aAAe,SAACG,GACdA,EAAQA,EAAMgD,OACd/D,EAAK4C,SAAS,CACZ7B,QACAG,eAAgBH,EAAQf,EAAKyC,MAAMC,OAAOsB,OAAO,SAAAtC,GAAK,OAAIA,EAAMA,MAAMK,KAAKkC,cAAcC,SAASnD,EAAMkD,iBAAkBjE,EAAKyC,MAAMC,QACrI,kBAAMyB,QAAQC,IAAI,WAAYpE,EAAKyC,MAAMvB,eAAeM,OAAQ,cAClExB,EAAKyC,MAAME,QAAQ0B,QAAQ,SAAAC,GACrBA,EAAO/B,MAAM0B,cAAcC,SAASnD,EAAMkD,eAG5CK,EAAOC,YAAW,GAFlBD,EAAOC,YAAW,QAQxBC,gBAAkB,WAChB3B,OAAO4B,MAAM,oMAAoMC,KAAK,SAAAC,GACpN,OAAOA,EAASC,SACfF,KAAK,SAAAE,GACN5E,EAAK4C,SAAS,CACZF,OAAQkC,EAAKD,SAASE,OAAO,GAAGC,MAChC5D,eAAgB0D,EAAKD,SAASE,OAAO,GAAGC,OACxC,kBAAMX,QAAQC,IAAI,WAAYpE,EAAKyC,MAAMvB,eAAeM,OAAQ,cAClExB,EAAKsD,YACJyB,MAAM,SAAAC,GACPb,QAAQC,IAAIY,QAKhBzB,QAAU,WACR,IAAIZ,EAAcsC,EAAS,IAAIpC,OAAOqC,OAAOC,KAAKC,aAAgBC,EAAa,IAAIxC,OAAOqC,OAAOC,KAAKG,WAClGnE,EAAM,IAAI0B,OAAOqC,OAAOC,KAAKI,IAAIzC,SAASC,eAAe,OAAQ,CACnEyC,OAAQ,CAACC,IAAK,UAAWC,IAAK,YAC9BC,KAAM,KAERxB,QAAQC,IAAIpE,EAAKyC,MAAMC,QACvBC,EAAU3C,EAAKyC,MAAMC,OAAOvB,IAAI,SAAAO,GAC9B,IAAI4C,EAAS,IAAIzB,OAAOqC,OAAOC,KAAKS,OAAO,CACzCC,SAAU,CAACJ,IAAK/D,EAAMA,MAAMoE,SAASL,IAAKC,IAAKhE,EAAMA,MAAMoE,SAASJ,KACpEvE,IAAKA,EACL4E,UAAWlD,OAAOqC,OAAOC,KAAKa,UAAUC,KACxC1D,MAAOb,EAAMA,MAAMK,KACnB1B,GAAIqB,EAAMA,MAAMrB,KAUlB,OARAiE,EAAO4B,YAAY,QAAS,WAC1B5B,EAAO6B,aAAatD,OAAOqC,OAAOC,KAAKa,UAAUI,QACjDC,WAAW,WACT/B,EAAO6B,aAAa,OACnB,KAaP,SAA4B7B,EAAQe,EAAY3D,GAC9C,IAAI4E,EAAoB,IAAIzD,OAAOqC,OAAOC,KAAKoB,kBAyB/CD,EAAkBE,sBAAsBlC,EAAOuB,SAxBlC,GACb,SAAuBY,EAAMC,GAC3B,GAAGA,IAAW7D,OAAOqC,OAAOC,KAAKwB,iBAAiBC,GAAI,CACpD,IAAIC,EAAyBJ,EAAKX,SAASgB,OACvCC,EAAUlE,OAAOqC,OAAOC,KAAK6B,SAASC,UAAUC,eAAeL,EAAwBvC,EAAOuB,UAClGR,EAAW8B,WAAW,YACXzF,EAAMA,MAAMK,KAAO,WACpBL,EAAMA,MAAMoE,SAASsB,iBAAiBC,KAAK,QAAU,mCAE/D,IAAIC,EAAkB,CACpBzB,SAAUgB,EACVU,IAAK,CACHR,QAASA,EACTS,MAAO,KAGX,IAAI3E,OAAOqC,OAAOC,KAAKsC,mBAAmB5E,OAAOC,SAASC,eAAe,QAASuE,QAElFjC,EAAW8B,WAAW,YACXzF,EAAMA,MAAMK,KAAO,WACpBL,EAAMA,MAAMoE,SAASsB,iBAAiBC,KAAK,QAAU,gBAKnElG,EAAIuG,QAAQ,IACZvG,EAAIwG,UAAUrD,EAAOuB,UACrBR,EAAWuC,KAAKzG,EAAKmD,GAzCnBuD,CAAmBvD,EAAQe,EAAY3D,KAEzCuD,EAAO6C,OAAOxD,EAAOuB,UACdvB,IAETtE,EAAK4C,SAAS,CACZD,YAEFxB,EAAI4G,UAAU9C,GACdpC,OAAOqC,OAAOC,KAAKhC,MAAM6E,eAAenF,OAAQ,SAAU,WAAO1B,EAAI4G,UAAU9C,QAqCjFrD,UAAY,SAACF,GACX,IAAI4C,EAAStE,EAAKyC,MAAME,QAAQqB,OAAO,SAAAM,GAAM,OAAIA,EAAOjE,KAAOqB,EAAMA,MAAMrB,KAAI,GAC/EwC,OAAOqC,OAAOC,KAAKhC,MAAM8E,QAAQ3D,EAAO,6FAlJxCrE,KAAKuE,mDAsJL,OACEtE,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBAAgBW,aAAW,iCACjCd,EAAAC,EAAAC,cAAC8H,EAAD,CAAQ9F,cAAenC,KAAKmC,cAAeC,UAAWpC,KAAKwC,MAAMJ,UAAWC,YAAarC,KAAKqC,cAC9FpC,EAAAC,EAAAC,cAAC+H,EAAD,CAASvH,aAAcX,KAAKW,aAAcM,eAAgBjB,KAAKwC,MAAMvB,eAAgBU,UAAW3B,KAAK2B,UAAWb,MAAOd,KAAKwC,MAAM1B,MAAOe,aAAc7B,KAAK6B,eAC5J5B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAK+B,KAAK,cAAcnB,aAAW,4BAA4BX,GAAG,iBAvK1D4B,cCDlBmG,IAASC,OAAOnI,EAAAC,EAAAC,cAACkI,EAAD,MAASxF,SAASC,eAAe,SAG9CwF,UAAUC,eACTD,UAAUC,cAAcC,SAAS,UAAU/D,KAAK,WAC5CP,QAAQC,IAAI,2CACbW,MAAM,SAACC,GACNb,QAAQa,MAAMA,GACdb,QAAQC,IAAI","file":"static/js/main.4d5ef32e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {DebounceInput} from 'react-debounce-input'\r\n//Component that contains the list of venues\r\nclass Sidebar extends Component {\r\n    render() {\r\n        return (\r\n            <aside id=\"sidebar\">\r\n                {/* Debounce input waits for the input for provided duration before invoking onChange */}\r\n                <label>Filter: <DebounceInput debounceTimeout={500} placeholder=\"Type your query\" onChange={(e) => {this.props.filterVenues(e.target.value)}} value={this.props.query}/></label>\r\n                <ul aria-label=\"Nearby Venues' List\" tabIndex=\"0\" id=\"side-list\">\r\n                    {this.props.filteredVenues.map((filtered, index) => {\r\n                        return  <li tabIndex=\"0\" aria-posinset={index+1} aria-setsize={this.props.filteredVenues.length} key={filtered.venue.id} onClick={() => this.props.clickList(filtered)} onKeyPress={(e) => {this.props.listKeyPress(e, filtered)}}>\r\n                                    <h3><strong>{filtered.venue.name}</strong></h3>\r\n                                    <span>{filtered.venue.categories[0].name}</span>\r\n                                </li>\r\n                    })}\r\n                </ul>\r\n            </aside>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\n//Component for navigation\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav id=\"navbar\">\r\n                <h1>Neighbourhood Map</h1>\r\n                <div tabIndex=\"0\" role='button' id=\"toggle-nav\" onClick={() => {this.props.toggleSidebar(this.props.toggleVal)}} onKeyPress={(e) => {this.props.navKeyPress(e, this.props.toggleVal)}}>\r\n                    {this.props.toggleVal ? <span role='button' aria-label='open' title=\"Tap to open sidebar\">&#9776;</span> : <span role='button' aria-label='close' title=\"Tap to close sidebar\">&#10008;</span>}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\nimport './App.css';\r\n\r\n//Main component to hold navbar, sidebar, map\r\nclass App extends Component {\r\n\r\n  state = {\r\n    venues: [], //holds venue data fetched from FourSquare API\r\n    markers: [], //holds all the markers on map\r\n    filteredVenues: [], //holds the venues after applying filter based on provided query \r\n    query: '', //holds the query from filter box\r\n    toggleVal: true //flag to toggle sidebar and close button\r\n  }\r\n\r\n  //get nearby venues on component mount\r\n  componentDidMount() {\r\n    this.getNearbyVenues()\r\n  }\r\n\r\n  //show/hide the sidebar\r\n  toggleSidebar = (value) => {\r\n    this.setState({\r\n      toggleVal: !value\r\n    })\r\n    if(this.state.toggleVal) {\r\n      window.document.getElementById('sidebar').style.left = '0px'\r\n      window.document.getElementById('sidebar').style.visibility = 'visible'\r\n    }\r\n    else {\r\n      window.document.getElementById('sidebar').style.left = '-400px'\r\n      window.document.getElementById('sidebar').style.visibility = 'hidden'\r\n    }\r\n  }\r\n\r\n  //open sidebar on pressing enter on focused nav button\r\n  navKeyPress = (event, value) => {\r\n    var code = event.keyCode || event.which\r\n    if(code === 13) {\r\n      this.toggleSidebar(value)\r\n    }\r\n  }\r\n\r\n  //zoom on the marker related to the list item on pressing enter\r\n  listKeyPress = (event, venue) => {\r\n    var code = event.keyCode || event.which\r\n    if(code === 13) {\r\n      this.clickList(venue)\r\n    }\r\n  }\r\n\r\n  //load the google map api asynchronously by creating and putting script tag\r\n  loadMap = () => {\r\n    window.initMap = this.initMap\r\n    var index = window.document.getElementsByTagName('script')[0]\r\n    var script = window.document.createElement('script')\r\n    script.src = \"https://maps.googleapis.com/maps/api/js?libraries=geometry&key=AIzaSyB9ggWWErnMrBBV2581LSTZVWxhB7BbylQ&callback=initMap\"\r\n    script.async = true\r\n    script.defer = true\r\n    index.parentNode.insertBefore(script, index)\r\n  }\r\n\r\n  //show/hide markers passing the query and create filteredVenues list that includes only those\r\n  //venues whose name includes the provided query\r\n  filterVenues = (query) => {\r\n    query = query.trim()\r\n    this.setState({\r\n      query,\r\n      filteredVenues: query ? this.state.venues.filter(venue => venue.venue.name.toLowerCase().includes(query.toLowerCase())) : this.state.venues\r\n    },() => console.log(\"Showing \", this.state.filteredVenues.length, \" places.\"))\r\n    this.state.markers.forEach(marker => {\r\n      if(!marker.title.toLowerCase().includes(query.toLowerCase())){\r\n        marker.setVisible(false)\r\n      } else {\r\n        marker.setVisible(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  //get all the nearby venues using FourSquare API. It returns 30 results.\r\n  getNearbyVenues = () => {\r\n    window.fetch('https://api.foursquare.com/v2/venues/explore?client_id=LRQXKPJ21ZWDLMSIF0A3QI2H23EBUFZM2WE0WTHL2CMIILBC&client_secret=NAHU30SNZJMVDM2SBG33ZTVAP1K5LBUJOKTSH3PDTI4KCHNI&v=20180323&near=hyderabad').then(response => {\r\n      return response.json()\r\n    }).then(json => {\r\n      this.setState({\r\n        venues: json.response.groups[0].items,\r\n        filteredVenues: json.response.groups[0].items\r\n      },() => console.log(\"Showing \", this.state.filteredVenues.length, \" places.\"))\r\n      this.loadMap()\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  //initMap function to initialize the map and markers\r\n  initMap = () => {\r\n    var markers = [], bounds = new window.google.maps.LatLngBounds(), infoWindow = new window.google.maps.InfoWindow()\r\n    var map = new window.google.maps.Map(document.getElementById('map'), {\r\n      center: {lat: 17.422316, lng: 78.4741774},\r\n      zoom: 14\r\n    });\r\n    console.log(this.state.venues)\r\n    markers = this.state.venues.map(venue => {\r\n      var marker = new window.google.maps.Marker({\r\n        position: {lat: venue.venue.location.lat, lng: venue.venue.location.lng},\r\n        map: map,\r\n        animation: window.google.maps.Animation.DROP,\r\n        title: venue.venue.name,\r\n        id: venue.venue.id\r\n      })\r\n      marker.addListener('click', () => {\r\n        marker.setAnimation(window.google.maps.Animation.BOUNCE)\r\n        setTimeout(() => {\r\n          marker.setAnimation(null)\r\n        }, 1000)\r\n        populateInfowindow(marker, infoWindow, venue)\r\n      })\r\n      bounds.extend(marker.position)\r\n      return marker\r\n    })\r\n    this.setState({\r\n      markers\r\n    })\r\n    map.fitBounds(bounds)\r\n    window.google.maps.event.addDomListener(window, 'resize', () => {map.fitBounds(bounds)})\r\n\r\n    //this updates the infoWindow content with streetView panorama if it is defined\r\n    function populateInfowindow(marker, infoWindow, venue) {\r\n      var streetViewService = new window.google.maps.StreetViewService()\r\n      var radius = 50\r\n      function getStreetView(data, status) {\r\n        if(status === window.google.maps.StreetViewStatus.OK) {\r\n          var nearStreetViewLocation = data.location.latLng\r\n          var heading = window.google.maps.geometry.spherical.computeHeading(nearStreetViewLocation, marker.position)\r\n          infoWindow.setContent('<div>' +\r\n            '<h4>' + venue.venue.name + '</h4>' +\r\n            '<p>' + venue.venue.location.formattedAddress.join('<br>') + '</p>' +\r\n            '</div><div id=\"pano\"></div>')\r\n          var panoramaOptions = {\r\n            position: nearStreetViewLocation,\r\n            pov: {\r\n              heading: heading,\r\n              pitch: 30\r\n            }\r\n          }\r\n          new window.google.maps.StreetViewPanorama(window.document.getElementById('pano'), panoramaOptions)\r\n        } else {\r\n          infoWindow.setContent('<div>' +\r\n            '<h4>' + venue.venue.name + '</h4>' +\r\n            '<p>' + venue.venue.location.formattedAddress.join('<br>') + '</p>' +\r\n            '</div>')\r\n        }\r\n      }\r\n      streetViewService.getPanoramaByLocation(marker.position, radius, getStreetView)\r\n      map.setZoom(15)\r\n      map.setCenter(marker.position)\r\n      infoWindow.open(map, marker)\r\n    }\r\n  }\r\n\r\n  //selects the marker on clicking a list item by trigerring click on marker\r\n  clickList = (venue) => {\r\n    var marker = this.state.markers.filter(marker => marker.id === venue.venue.id)[0]\r\n    window.google.maps.event.trigger(marker,'click')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"app-container\" aria-label=\"Neighbourhood Map Application\">\r\n        <Navbar toggleSidebar={this.toggleSidebar} toggleVal={this.state.toggleVal} navKeyPress={this.navKeyPress}/>\r\n        <Sidebar filterVenues={this.filterVenues} filteredVenues={this.state.filteredVenues} clickList={this.clickList} query={this.state.query} listKeyPress={this.listKeyPress}/>\r\n        <main>\r\n          <div role=\"application\" aria-label=\"Map showing nearby venues\" id=\"map\"></div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// Service Worker Registration\r\nif(navigator.serviceWorker) {\r\n    navigator.serviceWorker.register('/sw.js').then(() => {\r\n        console.log('ServiceWorker Successfully Registered');\r\n    }).catch((error) => {\r\n        console.error(error);\r\n        console.log('ServiceWorker Not Registered');\r\n    });\r\n}\r\n"],"sourceRoot":""}